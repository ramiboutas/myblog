'''
Django settings for config project.

Generated by 'django-admin startproject' using Django 4.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
'''

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os

PROJECT_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
BASE_DIR = os.path.dirname(PROJECT_DIR)


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/


# Application definition

INSTALLED_APPS = [
    'home',
    'search',
    'flex',
    'subscribers',
    'blog',
    'menus',
    'contact',
    'wagtail_localize',
    'wagtail_localize.locales',

    'wagtail.contrib.forms',
    'wagtail.contrib.redirects',
    'wagtail.contrib.settings',
    'wagtail.contrib.modeladmin',
    'wagtail.embeds',
    'wagtail.sites',
    'wagtail.users',
    'wagtail.snippets',
    'wagtail.documents',
    'wagtail.images',
    'wagtail.search',
    'wagtail.admin',
    'wagtail.core',
    'wagtail.api.v2',


    'django_extensions',
    'modelcluster',
    'taggit',

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'django.contrib.sitemaps',

    'analytical',
    'captcha',
    'wagtailcaptcha',
    'wagtailmarkdown',
    'wagtailcodeblock',
    'wagtailmetadata',
    'django_tex',
]

SITE_ID = 1

MIDDLEWARE = [
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'wagtail.contrib.redirects.middleware.RedirectMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'templates'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'blog.context_processors.categories',
            ],
        },
    },
    {
        'NAME': 'tex',
        'BACKEND': 'django_tex.engine.TeXEngine',
        'DIRS': os.path.join(BASE_DIR, 'templates'),
        'APP_DIRS': False,
        'OPTIONS': {
            'environment': 'config.jinja2.environment',
        }
    },
]

AUTHENTICATION_BACKENDS = [
    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',
]

WSGI_APPLICATION = 'config.wsgi.application'



# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# wagtail-localize
WAGTAIL_I18N_ENABLED = True

WAGTAIL_CONTENT_LANGUAGES = LANGUAGES = [
    ('en', 'English'),
    ('es', 'Spanish'),
    ('de', 'German'),
]


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/


STATICFILES_DIRS = [
    os.path.join(PROJECT_DIR, 'static'),
]


STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
]



# Wagtail settings

WAGTAIL_SITE_NAME = 'www.ramiboutas.com'

# Search
# https://docs.wagtail.org/en/stable/topics/search/backends.html
WAGTAILSEARCH_BACKENDS = {
    'default': {
        'BACKEND': 'wagtail.search.backends.database',
    }
}

# WAGTAILSEARCH_BACKENDS = {
#     'default': {
#         'BACKEND': 'wagtail.search.backends.elasticsearch7',
#         'URLS': ['http://localhost:9200'],
#         'INDEX': 'wagtail',
#         'TIMEOUT': 5,
#         'OPTIONS': {},
#         'INDEX_SETTINGS': {},
#     }
# }


# Base URL to use when referring to full URLs within the Wagtail admin backend -
# e.g. in notification emails. Don't include '/admin' or a trailing slash
BASE_URL = 'https://www.ramiboutas.com'

# celery
CELERY_BROKER_URL = 'redis://127.0.0.1:6379/3'
CELERY_RESULT_BACKEND = 'django-db'

# Recaptcha
RECAPTCHA_PUBLIC_KEY = os.environ.get("RECAPTCHA_PUBLIC_KEY")
RECAPTCHA_PRIVATE_KEY = os.environ.get("RECAPTCHA_PRIVATE_KEY")
NOCAPTCHA = True

# Social media promotion

#  Telegram
TELEGRAM_ACCOUNTS_FOR_MATLAB = {
    'es': {
        'BOT_API_KEY': os.environ.get("TELEGRAM_BOT_API_KEY"),
        'CHANNEL_NAME': '@matlabes',
    },
    'en': {
        'BOT_API_KEY': os.environ.get("TELEGRAM_BOT_API_KEY"),
        'CHANNEL_NAME': '@matlabstuff',
    },
    'de': {
        'BOT_API_KEY': os.environ.get("TELEGRAM_BOT_API_KEY"),
        'CHANNEL_NAME': '@matlabde',
    },
}


TELEGRAM_ACCOUNTS_FOR_EXCEL = {
    'es': {
        'BOT_API_KEY': os.environ.get("TELEGRAM_BOT_API_KEY"),
        'CHANNEL_NAME': '@excelvbaes',
    },
    'en': {
        'BOT_API_KEY': os.environ.get("TELEGRAM_BOT_API_KEY"),
        'CHANNEL_NAME': '@excelvbaen',
    },
    'de': {
        'BOT_API_KEY': os.environ.get("TELEGRAM_BOT_API_KEY"),
        'CHANNEL_NAME': '@excelvbade',
    },
}

TELEGRAM_ACCOUNTS_FOR_WEBDEV = {
    'es': {
        'BOT_API_KEY': os.environ.get("TELEGRAM_BOT_API_KEY"),
        'CHANNEL_NAME': '@desarr0lloweb',
    },
    'en': {
        'BOT_API_KEY': os.environ.get("TELEGRAM_BOT_API_KEY"),
        'CHANNEL_NAME': '@webdeven',
    },
    'de': {
        'BOT_API_KEY': os.environ.get("TELEGRAM_BOT_API_KEY"),
        'CHANNEL_NAME': '@web_entwicklung',
    },
}




# Linkedin
LINKEDIN_CLIENT_ID = os.environ.get("LINKEDIN_CLIENT_ID") # not needed at the moment
LINKEDIN_CLIENT_SECRET = os.environ.get("LINKEDIN_CLIENT_SECRET") # not needed at the moment
LINKEDIN_PROFILE_ID = os.environ.get("LINKEDIN_PROFILE_ID")
LINKEDIN_ACCESS_TOKEN = os.environ.get("LINKEDIN_ACCESS_TOKEN")

# Twitter
TWITTER_CLIENT_ID = os.environ.get("TWITTER_CLIENT_ID")
TWITTER_CLIENT_SECRET = os.environ.get("TWITTER_CLIENT_SECRET")

TWITTER_API_KEY = os.environ.get("TWITTER_API_KEY")
TWITTER_API_KEY_SECRET = os.environ.get("TWITTER_API_KEY_SECRET")

TWITTER_ACCESS_TOKEN = os.environ.get("TWITTER_ACCESS_TOKEN")
TWITTER_ACCESS_TOKEN_SECRET = os.environ.get("TWITTER_ACCESS_TOKEN_SECRET")

TWITTER_BEARER_TOKEN = os.environ.get("TWITTER_BEARER_TOKEN")


# Google analytics
GOOGLE_ANALYTICS_GTAG_PROPERTY_ID = 'G-WH1GBQYLVS'

# Email settings
EMAIL_HOST = os.environ.get('EMAIL_HOST')
EMAIL_USE_TLS = str(os.environ.get('EMAIL_USE_TLS')) == '1'
EMAIL_PORT = os.environ.get('EMAIL_PORT')
EMAIL_HOST_USER = os.environ.get('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = os.environ.get('EMAIL_HOST_PASSWORD')
DEFAULT_FROM_EMAIL = EMAIL_HOST
ADMIN_EMAIL_FOR_NOTIFICATIONS = os.environ.get('ADMIN_EMAIL_FOR_NOTIFICATIONS')


# ACCOUNT_AUTHENTICATED_LOGIN_REDIRECTS = True
LOGIN_URL = '/login/'
LOGIN_REDIRECT_URL = '/'
ACCOUNT_AUTHENTICATION_METHOD = 'username_email'
ACCOUNT_CONFIRM_EMAIL_ON_GET = True
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_EMAIL_VERIFICATION = 'mandatory'
ACCOUNT_LOGIN_ON_EMAIL_CONFIRMATION = True
ACCOUNT_LOGOUT_ON_GET = True
ACCOUNT_LOGIN_ON_PASSWORD_RESET = True
ACCOUNT_LOGOUT_REDIRECT_URL = '/login/'
ACCOUNT_PRESERVE_USERNAME_CASING = False
ACCOUNT_SESSION_REMEMBER = True
ACCOUNT_SIGNUP_PASSWORD_ENTER_TWICE = False
ACCOUNT_USERNAME_BLACKLIST = ['ramiboutas', 'elonmusk', 'god']
ACCOUNT_USERNAME_MIN_LENGTH = 3

# wagtailmarkdown

WAGTAILMARKDOWN = {
    # ...
    'extension_configs': {'pymdownx.arithmatex': {'generic': True}}
}

# wagtailcodeblock

# Themes:
# https://github.com/FlipperPA/wagtailcodeblock
# 'default' -> http://prismjs.com/index.html?theme=prism
# 'coy' -> http://prismjs.com/index.html?theme=prism-coy
# 'dark' -> http://prismjs.com/index.html?theme=prism-dark
# 'funky' -> http://prismjs.com/index.html?theme=prism-funky
# 'okaidia' -> http://prismjs.com/index.html?theme=prism-okaidia
# 'solarizedlight' -> http://prismjs.com/index.html?theme=prism-solarizedlight
# 'twilight' -> http://prismjs.com/index.html?theme=prism-twilight
WAGTAIL_CODE_BLOCK_THEME = 'okaidia'

# https://cdnjs.cloudflare.com/ajax/libs/prism/1.25.0/plugins/copy-to-clipboard/prism-copy-to-clipboard.min.js

WAGTAIL_CODE_BLOCK_LINE_NUMBERS = True
WAGTAIL_CODE_BLOCK_COPY_TO_CLIPBOARD = True

WAGTAIL_CODE_BLOCK_LANGUAGES = (
    ('bash', 'Bash + Shell'),
    ('css', 'CSS'),
    ('django', 'Django/Jinja2'),
    ('javascript', 'JavaScript'),
    ('json', 'JSON'),
    ('latex', 'LaTeX'),
    ('lua', 'Lua'),
    ('makefile', 'Makefile'),
    ('markdown', 'Markdown'),
    ('matlab', 'MATLAB'),
    ('nginx', 'nginx'),
    ('powershell', 'PowerShell'),
    ('python', 'Python'),
    ('regex', 'Regex'),
    ('sql', 'SQL'),
    ('textile', 'Textile'),
    ('typescript', 'TypeScript'),
    ('vbnet', 'VB.Net'),
    ('visual-basic', 'Visual Basic'),
    ('wiki', 'Wiki markup'),
    ('wolfram', 'Wolfram Mathematica'),

)


# Nav menus
